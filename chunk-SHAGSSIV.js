import{a as h}from"./chunk-FXKGETAD.js";import{R as s,U as p,_ as N,a as o}from"./chunk-QEFPM76F.js";var E={VERSION:"v0.0.4",BASE_ENVIRONMENT:"",ENVIRONMENTS_URLS:{},BASE_URL:"",API_VERSION:"v1",EXTERNAL_PROTOCOLS:["http","https"],TOKEN_HEADER_KEY:"Authorization"};var S=(()=>{class i{constructor(){this.http=N(h),this.CONFIG=E,this.BASE_URL="",this.AZURE_BASE_URL=""}load(){return this.http.get("CONFIGURATIONS.json").pipe(s(t=>this.CONFIG=o(o({},this.CONFIG),t))).pipe(s(()=>this.prepareBaseUrl()))}prepareBaseUrlGeneric(t,e){if(!Object.prototype.hasOwnProperty.call(this.CONFIG,"ENVIRONMENTS_URLS")||!Object.keys(this.CONFIG.ENVIRONMENTS_URLS).length)throw Error("There is no ENVIRONMENTS_URLS property or it is empty in app-configuration.json file. Please check it.");if(typeof this.CONFIG[t]>"u")throw Error(`The environment key "${t}" is not provided in app-configuration.json file.`);let n=this.CONFIG.ENVIRONMENTS_URLS[this.CONFIG[t]];if(typeof n>"u")throw Error(`The environment "${this.CONFIG[t]}" does not exist in ENVIRONMENTS_URLS in app-configuration.json file.`);let r=n;return Object.prototype.hasOwnProperty.call(this.CONFIG,"API_VERSION")&&this.CONFIG.API_VERSION&&(r.lastIndexOf("/")!==r.length-1&&(r+="/"),r+=this.CONFIG.API_VERSION),this[e]=r,r}prepareBaseUrl(){return this.prepareBaseUrlGeneric("BASE_ENVIRONMENT","BASE_URL")}static{this.\u0275fac=function(e){return new(e||i)}}static{this.\u0275prov=p({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();export{S as a};
